// Generated by view binder compiler. Do not edit!
package com.example.kmmapplication.androidApp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.kmmapplication.androidApp.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemGameBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialTextView gameType;

  @NonNull
  public final MaterialTextView loosingPlayers;

  @NonNull
  public final MaterialTextView loosingScore;

  @NonNull
  public final MaterialTextView winningPlayers;

  @NonNull
  public final MaterialTextView winningScore;

  private ItemGameBinding(@NonNull MaterialCardView rootView, @NonNull MaterialTextView gameType,
      @NonNull MaterialTextView loosingPlayers, @NonNull MaterialTextView loosingScore,
      @NonNull MaterialTextView winningPlayers, @NonNull MaterialTextView winningScore) {
    this.rootView = rootView;
    this.gameType = gameType;
    this.loosingPlayers = loosingPlayers;
    this.loosingScore = loosingScore;
    this.winningPlayers = winningPlayers;
    this.winningScore = winningScore;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemGameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemGameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_game, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemGameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.gameType;
      MaterialTextView gameType = rootView.findViewById(id);
      if (gameType == null) {
        break missingId;
      }

      id = R.id.loosingPlayers;
      MaterialTextView loosingPlayers = rootView.findViewById(id);
      if (loosingPlayers == null) {
        break missingId;
      }

      id = R.id.loosingScore;
      MaterialTextView loosingScore = rootView.findViewById(id);
      if (loosingScore == null) {
        break missingId;
      }

      id = R.id.winningPlayers;
      MaterialTextView winningPlayers = rootView.findViewById(id);
      if (winningPlayers == null) {
        break missingId;
      }

      id = R.id.winningScore;
      MaterialTextView winningScore = rootView.findViewById(id);
      if (winningScore == null) {
        break missingId;
      }

      return new ItemGameBinding((MaterialCardView) rootView, gameType, loosingPlayers,
          loosingScore, winningPlayers, winningScore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
